spring:
  config:
    import:
      - "optional:file:.env[.properties]"
      - "classpath:video-providers.yml"
  # CORE APPLICATION INFO
  application:
    name: video-metadata-backend

  # Reactive (R2DBC)
  r2dbc:
    url: r2dbc:postgresql://${DB_HOST:myhost}:${DB_PORT:5432}/${DB_NAME:video_db}
    username: ${DB_USER:postgres}
    password: ${DB_PASS:postgres}

  # DataSource / JPA
  datasource:
    url: jdbc:postgresql://${DB_HOST:myhost}:${DB_PORT:5432}/${DB_NAME:video_db}
    username: ${DB_USER:postgres}
    password: ${DB_PASS:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 60000
      connection-timeout: 30000
      max-lifetime: 1800000
      pool-name: VideoMetadataHikari

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        format_sql: true
        jdbc:
          time_zone: UTC
        connection.provider_disables_autocommit: true
        default_batch_fetch_size: 50

  flyway:
    enabled: true
    # explicit JDBC URL override (optional, but clarifies intent)
    url: jdbc:postgresql://${DB_HOST:myhost}:${DB_PORT:5430}/${DB_NAME:video_db}
    user: ${DB_USER:postgres}
    password: ${DB_PASS:postgres}
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true

  jackson:
    time-zone: UTC
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      adjust-dates-to-context-time-zone: false

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      database: ${REDIS_DB:0}
      password: ${REDIS_PASSWORD:}
      timeout: PT5S
#      client-type: lettuce
      ssl:
        enabled: ${REDIS_SSL:false}

  cache:
    type: redis
    redis:
      time-to-live: PT5M
      cache-null-values: false
      enable-statistics: true
  # ——— WebFlux base path ————————————————————————————————
  webflux:
    base-path: /api
#  profiles: schema-print
  graphql:
    schema:
      printer:
        # print the runtime‐built schema to a file
        enabled: true
        # path under classpath or filesystem to write the schema SDL
#        location: build/generated/graphql/schema.graphqls
    graphiql:
      enabled: ${SPRING_GRAPHQL_GRAPHIQL_ENABLED:false}
    http:
      path: /graphql
    websocket:
      path: /graphql/ws

  security:
    oauth2:
      resourceserver:
        jwt:
          # Secret‑key for HS256 decoding in the reactive resource server
          # Auto-configured JwtDecoder using shared secret (HS256).
          secret-key: ${JWT_SECRET:CHANGEME_BASE64_SECRET}


management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: never

logging:
  level:
    root: INFO
    org.flywaydb: DEBUG
    org.springframework.security: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: ${LOG_SQL_LEVEL:WARN}
    com.github.dimitryivaniuta.videometadata: DEBUG
    com.github.dimitryivaniuta.videometadata.graphql.schema: DEBUG
    org.springframework.graphql: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX} %-5level [%thread] %logger{36} - %msg%n"

axon:
  serializer.general: jackson
  serializer.events:  jackson
  serializer.messages: jackson
  eventhandling:
    processors:
      video-projection:
        mode: tracking     # enables replay & parallel segments
        initial-segment-count: 1

resilience4j:
  bulkhead:
    instances:
      videoImport:
        max-concurrent-calls: 50
        max-wait-duration: 10ms

  circuitbreaker:
    instances:
      videoImport:
        sliding-window-type: COUNT_BASED
        sliding-window-size: 20
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        permitted-number-of-calls-in-half-open-state: 5

  retry:
    instances:
      videoImport:
        max-attempts: 3
        wait-duration: 500ms
        exponential-backoff-multiplier: 2

  ratelimiter:
    instances:
      videoImport:
        limit-for-period: 20
        limit-refresh-period: 1s
        timeout-duration: 50ms

################################################################
# CUSTOM CONFIGURATION PROPERTIES (Require @ConfigurationProperties)
################################################################

security:
  jwt:
    issuer: ${JWT_ISSUER:video-metadata-app}
    audience: ${JWT_AUDIENCE:video-metadata-clients}
    secret: ${JWT_SECRET:CHANGEME_BASE64_SECRET}
    expiration-seconds: ${JWT_EXPIRATION_SECONDS:3600}
    refresh-expiration-seconds: ${JWT_REFRESH_EXPIRATION_SECONDS:86400}
    clock-skew-seconds: 60
    rotation-period-ms: 86400000
    jwks-uri: http://localhost:8080/api/.well-known/jwks.json

app:
  import:
    concurrency-limit: ${IMPORT_CONCURRENCY_LIMIT:4}
    max-retries: ${IMPORT_MAX_RETRIES:3}
    backoff-seconds: ${IMPORT_BACKOFF_SECONDS:1s}
    throttle:
      max-concurrent: ${IMPORT_THROTTLE_MAX_CONCURRENT:2}
      max-queued: ${IMPORT_THROTTLE_MAX_QUEUED:0}
      rate-limit-window: ${IMPORT_THROTTLE_WINDOW:PT60S}
      rate-limit-max-requests: ${IMPORT_THROTTLE_MAX_REQUESTS:20}
      duplicate-job-reject: ${IMPORT_THROTTLE_DUPLICATE_REJECT:true}
      service-retry:
        enabled: ${IMPORT_SERVICE_RETRY_ENABLED:true}
        max-attempts: ${IMPORT_SERVICE_RETRY_ATTEMPTS:2}
        backoff: ${IMPORT_SERVICE_RETRY_BACKOFF:PT0.8S}
    per-user:
      rate-limit-per-user: ${IMPORT_RATE_LIMIT_PER_USER:5}
      window: ${IMPORT_RATE_LIMIT_WINDOW:PT60S}
      duplicate-cache-ttl-ms: ${IMPORT_DUPLICATE_CACHE_TTL_MS:600000}

async:
  core-pool-size: ${ASYNC_CORE_POOL_SIZE:4}
  max-pool-size: ${ASYNC_MAX_POOL_SIZE:16}
  queue-capacity: ${ASYNC_QUEUE_CAPACITY:200}
  thread-name-prefix: AsyncExec-
  await-termination-seconds: 30
  wait-for-tasks-on-shutdown: true

rate-limiter:
  redis:
    prefix: ${RATE_LIMITER_PREFIX:ratelimit}
    default-capacity: ${RATE_LIMITER_DEFAULT_CAPACITY:100}
    refill-tokens: ${RATE_LIMITER_REFILL_TOKENS:100}
    refill-period: ${RATE_LIMITER_REFILL_PERIOD:PT60S}

lock:
  redis:
    prefix: ${LOCK_PREFIX:lock}
    ttl: ${LOCK_TTL:PT30S}
    extend-before-expiry: ${LOCK_EXTEND_BEFORE_EXPIRY:PT5S}

token:
  redis:
    prefix: ${TOKEN_REDIS_PREFIX:jwt:revoked}
    ttl-seconds: ${TOKEN_TTL_SECONDS:3600}

video:
  stats:
    cache-ttl-ms: ${VIDEO_STATS_CACHE_TTL_MS:300000}
  default-page-size: ${VIDEO_DEFAULT_PAGE_SIZE:20}
  max-page-size: ${VIDEO_MAX_PAGE_SIZE:100}

fx:
  base: USD
  symbols: INR,CAD,EUR,AUD,NZD
  apiKey: ${FX_API_KEY}     # put your key in env var
  provider:
    url: https://api.exchangerate.host
    timeoutMs: 3000